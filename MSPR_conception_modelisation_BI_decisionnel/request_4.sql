-- Total des commandes par mois sur une année
--	 Le/les produits les plus vendu par mois (Limité à 5 produits par exemple)
-- 	 La moyenne des occurrences les plus retrouvés (Les produits les plus vendus par mois)
-- 	 Quantités restantes des produits en stock avec une ligne qui délimite le seuil de produits

-- View 1
-- Get command quantity by month
CREATE VIEW GET_CMD_BY_MONTH AS
SELECT MONTHNAME(DATE_COMMANDE), AS MOIS, COUNT(*) AS NOMBRE_COMMANDE
FROM COMMANDE 
WHERE 
DATE_COMMANDE >= '2018-01-01' AND DATE_COMMANDE <= '2018-12-31'
GROUP BY MONTH(DATE_COMMANDE)

-- Testing the view
SELECT MOIS, NOMBRE_COMMANDE from GET_CMD_BY_MONTH;

-- View 2
-- Selecting quantity and product category and outputting the 5 first most selled products
-- CREATE VIEW GET_PDR_BY_MONTH AS
SELECT CODE_PRODUIT, SUM(QUANTITE_COMMANDE), AS NOMBRE_PRODUIT
FROM DETAIL_COMMANDE
GROUP BY CODE_PRODUIT 
ORDER BY SUM(QUANTITE_COMMANDE)
DESC 
LIMIT 5;

--SELECT CODE_PRODUIT, QUANTITE_COMMANDE
--FROM DETAIL_COMMANDE
--JOIN(
--	SELECT MONTHNAME(DATE_COMMANDE) AS MOIS, MAX(QUANTITE_COMMANDE) PRODUIT_LES_PLUS_VENDUS
--	FROM COMMANDE
--)
--AS DT
--ON 
--COMMANDE.NO_COMMANDE = DETAIL_COMMANDE.NO_COMMANDE 
--;

SELECT MAX(QUANTITE_COMMANDE) FROM DETAIL_COMMANDE;
SELECT MAX(QUANTITE_COMMANDE), COUNT(*) FROM DETAIL_COMMANDE;

SELECT CODE_PRODUIT, QUANTITE_COMMANDE
FROM DETAIL_COMMANDE
JOIN(
	SELECT * 
	FROM 
	
)
; 

-- La moyenne des occurrences les plus retrouvés (Les produits les plus vendus par mois)
-- 

SELECT * FROM COMMANDE c;


-- Quantités restantes des produits en stock avec une ligne qui délimite le seuil de produits
-- 

select
    monthname(`COMMANDE`.`DATE_COMMANDE`) AS `MOIS`,
    count(0) AS `NOMBRE_COMMANDE`
from
    `COMMANDE`
where
    `COMMANDE`.`DATE_COMMANDE` >= '2018-01-01'
    and `COMMANDE`.`DATE_COMMANDE` <= '2018-12-31'
group by
    month(`COMMANDE`.`DATE_COMMANDE`)
inner join DETAIL_COMMANDE dc 
on 
dc.NO_COMMANDE = COMMANDE.NO_COMMANDE 
;

SELECT MONTHNAME(DATE_COMMANDE) AS MOIS, 
QUANTITE_COMMANDE,
COUNT(0) AS NOMBRE_COMMANDE,
CODE_PRODUIT,
-- LAG(QUANTITE_COMMANDE) AS QUANTITE_RESTANTE
-- QUANTITE_COMMANDE - LAG(QUANTITE_COMMANDE)
-- OVER(ORDER BY NOMBRE_COMMANDE) AS NB_PRODUITS_RESTANT
QUANTITE_COMMANDE - COUNT(0) AS NB_PRODUITS_RESTANT
FROM COMMANDE C
INNER JOIN DETAIL_COMMANDE 
ON DETAIL_COMMANDE.NO_COMMANDE = C.NO_COMMANDE
WHERE DATE_COMMANDE >= '2018-01-01' AND '2018-12-31'
GROUP BY MONTH(DATE_COMMANDE); 

SELECT MONTHNAME(DATE_COMMANDE) AS MOIS, 
QUANTITE_COMMANDE,
COUNT(0) AS NOMBRE_COMMANDE,
CODE_PRODUIT,
-- DESCRIPTION AS LIBELLE_PRODUIT,
-- LAG(QUANTITE_COMMANDE) AS QUANTITE_RESTANTE
-- QUANTITE_COMMANDE - LAG(QUANTITE_COMMANDE)
-- OVER(ORDER BY NOMBRE_COMMANDE) AS NB_PRODUITS_RESTANT
CASE WHEN
	QUANTITE_COMMANDE - COUNT(0) < 0  
	THEN 0
	ELSE QUANTITE_COMMANDE - COUNT(0) 
END		
	AS NB_PRODUITS_RESTANT
FROM COMMANDE C
INNER JOIN DETAIL_COMMANDE DC 
ON DC.NO_COMMANDE = C.NO_COMMANDE
-- INNER JOIN PRODUIT P
-- ON P.CODE_PRODUIT = DC.CODE_PRODUIT
WHERE DATE_COMMANDE >= '2018-01-01' AND '2018-12-31'
GROUP BY MONTH(DATE_COMMANDE); 

-------------------------------------------------
-- CREATING THE VIEW with the remaining products
-------------------------------------------------
CREATE VIEW GET_REMAINING_STOCK_BY_PRODUCT AS 
SELECT MONTHNAME(DATE_COMMANDE) AS MOIS, 
QUANTITE_COMMANDE,
COUNT(0) AS NOMBRE_COMMANDE,
CODE_PRODUIT,
-- DESCRIPTION AS LIBELLE_PRODUIT,
-- LAG(QUANTITE_COMMANDE) AS QUANTITE_RESTANTE
-- QUANTITE_COMMANDE - LAG(QUANTITE_COMMANDE)
-- OVER(ORDER BY NOMBRE_COMMANDE) AS NB_PRODUITS_RESTANT
CASE WHEN
	QUANTITE_COMMANDE - COUNT(0) < 0  
	THEN 0
	ELSE QUANTITE_COMMANDE - COUNT(0) 
END		
	AS NB_PRODUITS_RESTANT
FROM COMMANDE C
INNER JOIN DETAIL_COMMANDE DC 
ON DC.NO_COMMANDE = C.NO_COMMANDE
-- INNER JOIN PRODUIT P
-- ON P.CODE_PRODUIT = DC.CODE_PRODUIT
WHERE DATE_COMMANDE >= '2018-01-01' AND '2018-12-31'
GROUP BY MONTH(DATE_COMMANDE); 

SELECT CODE_PRODUIT, QUANTITE_COMMANDE, NOMBRE_COMMANDE, NB_PRODUITS_RESTANT, MOIS FROM GET_REMAINING_STOCK_BY_PRODUCT;

-- SELECT * FROM GET_PDR_BY_MONTH;

